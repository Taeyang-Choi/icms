buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'org.springframework.boot' version '2.6.7'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    //querydsl 추가
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
    id 'java'
    id 'war'
}

group = 'com.ogp'
version = '1.2.0'
sourceCompatibility = "1.8"

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    implementation 'org.springframework.boot:spring-boot-devtools'

    implementation 'javax.servlet:jstl'
    implementation "org.apache.tomcat.embed:tomcat-embed-jasper"
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.2'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    //테스트에서 lombok 사용
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    // sql 값 넣어서 보여주기
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.7'

    //querydsl 추가
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    implementation "com.querydsl:querydsl-apt:${queryDslVersion}"


    // reason: class file for javax.annotation.meta.When not found 에러
    implementation 'com.google.code.findbugs:jsr305:3.0.2'

    // postgreSQL
    implementation 'org.postgresql:postgresql:42.5.0'

    // 웹소켓
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    // 좌표변환
    // https://mvnrepository.com/artifact/org.locationtech.proj4j/proj4j
    implementation 'org.locationtech.proj4j:proj4j:1.3.0'


}

tasks.named('test') {
    useJUnitPlatform()
}

targetCompatibility = JavaVersion.VERSION_1_8

//querydsl 추가 시작
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets {
    main.java.srcDir querydslDir
}
compileQuerydsl{
    options.annotationProcessorPath = configurations.querydsl
}
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}
//querydsl 추가 끝